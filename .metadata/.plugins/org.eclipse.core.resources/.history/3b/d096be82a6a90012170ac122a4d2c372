package com.agame.framework.impl;

import android.content.res.AssetFileDescriptor;
import android.media.MediaPlayer;
import android.media.MediaPlayer.OnCompletionListener;
import android.media.MediaPlayer.OnPreparedListener;
import android.media.MediaPlayer.OnSeekCompleteListener;
import android.media.MediaPlayer.OnVideoSizeChangedListener;

import com.agame.framework.Music;

public class AndroidMusic implements Music, OnCompletionListener, OnSeekCompleteListener, OnPreparedListener, OnVideoSizeChangedListener {

	MediaPlayer mediaPlayer;
    boolean isPrepared = false;
	
    
    
	public AndroidMusic(AssetFileDescriptor assetDescriptor) {
		mediaPlayer = new MediaPlayer();
		try {
			mediaPlayer.setDataSource(assetDescriptor.getFileDescriptor(),
                    				  assetDescriptor.getStartOffset(),
                    				  assetDescriptor.getLength());
            mediaPlayer.prepare();
            isPrepared = true;
            mediaPlayer.setOnCompletionListener(this);
            mediaPlayer.setOnSeekCompleteListener(this);
            mediaPlayer.setOnPreparedListener(this);
            mediaPlayer.setOnVideoSizeChangedListener(this);
        } catch (Exception e) {
            throw new RuntimeException("Couldn't load music");
        }
	}

	@Override
	public void play() {
		 if (this.mediaPlayer.isPlaying())
	            return;

	        try {
	            synchronized (this) {
	                if (!isPrepared)
	                    mediaPlayer.prepare();
	                mediaPlayer.start();
	            }
	        } catch (IllegalStateException e) {
	            e.printStackTrace();
	        } catch (IOException e) {
	            e.printStackTrace();
	        }
	}

	@Override
	public void stop() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void pause() {
		if (this.mediaPlayer.isPlaying())
            mediaPlayer.pause();
	}

	@Override
	public void setLooping(boolean looping) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void setVolume(float volume) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public boolean isPlaying() {
		return this.mediaPlayer.isPlaying();
	}

	@Override
	public boolean isStopped() {
		return !isPrepared;
	}

	@Override
	public boolean isLooping() {
		 return mediaPlayer.isLooping();
	}

	@Override
	public void dispose() {
		if (this.mediaPlayer.isPlaying()){
			this.mediaPlayer.stop();
		}
		this.mediaPlayer.release();
	}

	@Override
	public void seekBegin() {
		// TODO Auto-generated method stub
		
	}
	
	

}
